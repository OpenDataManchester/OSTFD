{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Open3R: Definition \u00b6 A data standard for reporting data about recycling and waste sites (RWS). Version \u00b6 Version 2.0 Published 2021-12-10 Contents \u00b6 Introduction Key Concepts Data Formats Data Specification Identifiers Controlled Lists Governance Supporting Files","title":"Home"},{"location":"#open3r-definition","text":"A data standard for reporting data about recycling and waste sites (RWS).","title":"Open3R: Definition"},{"location":"#version","text":"Version 2.0 Published 2021-12-10","title":"Version"},{"location":"#contents","text":"Introduction Key Concepts Data Formats Data Specification Identifiers Controlled Lists Governance Supporting Files","title":"Contents"},{"location":"1_Introduction/1_1_Introduction/","text":"Introduction \u00b6 What is the Open3P? \u00b6 Open3P is an open data standard for plastic packaging. It has been developed as part of the Plastics Packaging Portals (PPP) Project, an Innovate UK supported project under the Smart Sustainable Plastic Packaging (SSPP) Fund. The project is led by OPRL alongside project partners Open Data Manchester, Dsposal, RECOUP, and Ecosurety. The project brings together stakeholders from the entire plastic packaging ecosystem to explore how we might create the foundations for systemic change in the packaging value chain. We have had more than 80 individuals from over 40 organisations take part in our workshops, interviews and research and we are incredibly grateful to them for sharing their time, expertise and support. PPP has 5 main aims which will be delivered by 30th November 2022: Extend the Open3R Household Waste Recycling Centre (HWRCs) data standard Develop a prototype portal to capture data on geographically located recycling services such as HWRCs, bring banks, instore take back schemes to support a comprehensive open database of this information Develop an open standard for plastic packaging data (Open3P) Develop a prototype portal to capture packaging attribute data to enable it to be shared along the plastic packaging value chain and reported on Determine a sustainable business model and governance structure Although this funding and this phase of the project is focussed on plastic packaging, which is what Open3P covers currently, there is a commitment and desire to extend it to cover all types of packaging. By improving the data quality, granularity and availability of both packaging data and recycling services data and by enabling these datasets to be linked we believe we can support more sustainable packaging choices. By giving stakeholders visibility of the different parts of the chain we can help designers and manufacturers consider the end-of-life implications of their choices and we can help them determine the difference between a material being technically recyclable and the practicality of it being recycled. Providing recyclers and reprocessors with detailed data about material types and recycling disruptors we can enable more materials to be kept at a higher value for longer. Improving these datasets also helps deliver better information into the hands of consumers to support them to recycle more. Better data on market trends in packaging can also provide more certainty and unlock investment and innovation so that we can increase our recycling infrastructure and ensure more of our waste packaging ends up recycled. The standard is being developed according to the OpenStand principles of: Due process Broad consensus Transparency Balance Openness What is an open data standard? \u00b6 An open data standard is a set of rules that describe the structure and components of a dataset. Putting rules in place means people and organisations that publish and share data about the same thing can use the same language to talk about it. Having a standard makes it a lot easier to understand and reuse data that has been published and shared. It is especially useful if data is being published and shared by lots of different organisations to make an even bigger dataset. Anyone can then read about the standard, contribute data, or use the data knowing everyone is talking about the same thing. How is the standard being developed? \u00b6 The initial standard development was funded by Innovate UK , and is being developed through workshops with industry experts over a number of iterations. How to use the standard \u00b6 The documentation here details how to publish data to the standard, and how to use data that has been published to the standard. At this stage, the expectation is that data management will be supported by additional applications (such as the packaging portal that is also being developed as part of this project), and it is possible to record and publish data to the standard using the provided csv files in Section 8 of this documentation.","title":"Introduction"},{"location":"1_Introduction/1_1_Introduction/#introduction","text":"","title":"Introduction"},{"location":"1_Introduction/1_1_Introduction/#what-is-the-open3p","text":"Open3P is an open data standard for plastic packaging. It has been developed as part of the Plastics Packaging Portals (PPP) Project, an Innovate UK supported project under the Smart Sustainable Plastic Packaging (SSPP) Fund. The project is led by OPRL alongside project partners Open Data Manchester, Dsposal, RECOUP, and Ecosurety. The project brings together stakeholders from the entire plastic packaging ecosystem to explore how we might create the foundations for systemic change in the packaging value chain. We have had more than 80 individuals from over 40 organisations take part in our workshops, interviews and research and we are incredibly grateful to them for sharing their time, expertise and support. PPP has 5 main aims which will be delivered by 30th November 2022: Extend the Open3R Household Waste Recycling Centre (HWRCs) data standard Develop a prototype portal to capture data on geographically located recycling services such as HWRCs, bring banks, instore take back schemes to support a comprehensive open database of this information Develop an open standard for plastic packaging data (Open3P) Develop a prototype portal to capture packaging attribute data to enable it to be shared along the plastic packaging value chain and reported on Determine a sustainable business model and governance structure Although this funding and this phase of the project is focussed on plastic packaging, which is what Open3P covers currently, there is a commitment and desire to extend it to cover all types of packaging. By improving the data quality, granularity and availability of both packaging data and recycling services data and by enabling these datasets to be linked we believe we can support more sustainable packaging choices. By giving stakeholders visibility of the different parts of the chain we can help designers and manufacturers consider the end-of-life implications of their choices and we can help them determine the difference between a material being technically recyclable and the practicality of it being recycled. Providing recyclers and reprocessors with detailed data about material types and recycling disruptors we can enable more materials to be kept at a higher value for longer. Improving these datasets also helps deliver better information into the hands of consumers to support them to recycle more. Better data on market trends in packaging can also provide more certainty and unlock investment and innovation so that we can increase our recycling infrastructure and ensure more of our waste packaging ends up recycled. The standard is being developed according to the OpenStand principles of: Due process Broad consensus Transparency Balance Openness","title":"What is the Open3P?"},{"location":"1_Introduction/1_1_Introduction/#what-is-an-open-data-standard","text":"An open data standard is a set of rules that describe the structure and components of a dataset. Putting rules in place means people and organisations that publish and share data about the same thing can use the same language to talk about it. Having a standard makes it a lot easier to understand and reuse data that has been published and shared. It is especially useful if data is being published and shared by lots of different organisations to make an even bigger dataset. Anyone can then read about the standard, contribute data, or use the data knowing everyone is talking about the same thing.","title":"What is an open data standard?"},{"location":"1_Introduction/1_1_Introduction/#how-is-the-standard-being-developed","text":"The initial standard development was funded by Innovate UK , and is being developed through workshops with industry experts over a number of iterations.","title":"How is the standard being developed?"},{"location":"1_Introduction/1_1_Introduction/#how-to-use-the-standard","text":"The documentation here details how to publish data to the standard, and how to use data that has been published to the standard. At this stage, the expectation is that data management will be supported by additional applications (such as the packaging portal that is also being developed as part of this project), and it is possible to record and publish data to the standard using the provided csv files in Section 8 of this documentation.","title":"How to use the standard"},{"location":"2_Key_Concepts/2_1_Key_Concepts/","text":"Key Concepts \u00b6 Components \u00b6 an individual unit zippers, taps, etc. (even though attached) things used to tie components together Component Catalogue \u00b6 general template used for packaging manufacturers to store information. these components can be used by multiple users and combined with other components in different ways Unique Components \u00b6 a unique component is a component that takes information from the component catalogue, and has additional data added to it unique components are tangible components, ie physical objects that have a presence in the real world (as opposed to components from the catalogue, which are data about a hypothetical thing) Complete Packaging \u00b6 Unique components are combined to make complete packaging for example, a lid, a bottle and a label are all unique components. These would be combined to form a complete packaging item Multipack \u00b6 Sometimes, multiple units of complete packaing are combined, and sold as a single unit This is a multipack Load \u00b6 Complete packaging units are combined into a delivery load Usually wrapped in secondary and tertiary packaging","title":"Key Concepts"},{"location":"2_Key_Concepts/2_1_Key_Concepts/#key-concepts","text":"","title":"Key Concepts"},{"location":"2_Key_Concepts/2_1_Key_Concepts/#components","text":"an individual unit zippers, taps, etc. (even though attached) things used to tie components together","title":"Components"},{"location":"2_Key_Concepts/2_1_Key_Concepts/#component-catalogue","text":"general template used for packaging manufacturers to store information. these components can be used by multiple users and combined with other components in different ways","title":"Component Catalogue"},{"location":"2_Key_Concepts/2_1_Key_Concepts/#unique-components","text":"a unique component is a component that takes information from the component catalogue, and has additional data added to it unique components are tangible components, ie physical objects that have a presence in the real world (as opposed to components from the catalogue, which are data about a hypothetical thing)","title":"Unique Components"},{"location":"2_Key_Concepts/2_1_Key_Concepts/#complete-packaging","text":"Unique components are combined to make complete packaging for example, a lid, a bottle and a label are all unique components. These would be combined to form a complete packaging item","title":"Complete Packaging"},{"location":"2_Key_Concepts/2_1_Key_Concepts/#multipack","text":"Sometimes, multiple units of complete packaing are combined, and sold as a single unit This is a multipack","title":"Multipack"},{"location":"2_Key_Concepts/2_1_Key_Concepts/#load","text":"Complete packaging units are combined into a delivery load Usually wrapped in secondary and tertiary packaging","title":"Load"},{"location":"3_Data_Formats/3_1_Data_Formats/","text":"Data Formats \u00b6 When publishing Plastic Packaging Portal data, the csv format should be used. csv files can be created and edited in text editors, as well as spreadsheet packages such as Microsoft Excel, Apple Numbers, or Open Office. Template csv files will be provided for publishers to populate. Alternatively a publisher can create their own using the column headings specified.","title":"Data Formats"},{"location":"3_Data_Formats/3_1_Data_Formats/#data-formats","text":"When publishing Plastic Packaging Portal data, the csv format should be used. csv files can be created and edited in text editors, as well as spreadsheet packages such as Microsoft Excel, Apple Numbers, or Open Office. Template csv files will be provided for publishers to populate. Alternatively a publisher can create their own using the column headings specified.","title":"Data Formats"},{"location":"4_Data_Specification/4_1_Component_Catalogue/","text":"Component Catalogue \u00b6 Standard Spreadsheet Format \u00b6 The following table lists the column headings that should be used. When providing this information, you can either build your spreadsheet from scratch, or use the template provided. component_catalogue.csv Column Status Format Notes identifier required String A globally unique identifier. See identifiers section for information on how to construct this identifier name required String The name of this component. description recommended String A brief description of this component. tags recommended String A list of identifiers that might be used to identify the component in other systems. For example: bar codes or global trade item number (gtin). To provide tags please follow this format. tagName1: identifier1; tagName2: identifier2 imageURL recommended URL A URL that links to a picture of the component. Please see the guidelines below on how to capture the image and name the URL. LOWcode recommended String The list of waste code for only the component, by itself. LOW code is synonymous with European Waste Catelogue Code (EWC). For example: an empty bottle would have a LOWcode of 15 01 02 . Please use Dsposal or legislation.gov to find the LOWcode. Note : The LOWcode can based on its combination with other components and the actual product contained in the completePackaging. Be sure to only include the component LOWcode. If you cannot find the code or are uncertain please enter Uncertain . height required String The height of the component. Please see the guidelines below on how to properly measure and report the height. heightDate required String The date that the height was last verified/measured. Use the format dd/mm/yyyy . width required String The width of the component. Please see the guidelines below on how to properly measure and report the width. widthDate required String The date that the width was last verified/measured. Use the format dd/mm/yyyy . depth required String The depth of the component. Please see the guidelines below on how to properly measure and report the depth. depthDate required String The date that the depth was last verified/measured. Use the format dd/mm/yyyy . volume required String Using the height, width, and depth found using the measurement guidelines, calculate the component\u2019s volume using: height x width x depth . Report the volume as a string with mm3 and a space between the measurement. For example: the volume is 20 mm3 . volumeDate required String The date that the volume was last verified/measured. Use the format dd/mm/yyyy . weight required String The weight of the component. TBD weightDate required String The date that the weight was last verified/measured. Use the format dd/mm/yyyy . shape required String What is the shape of the component? The entry should contain the shape controlled list identifier for the component. flexibility required String Whether the component is considered flexible or rigid. The entry should be the flexibility controlled list identifier. componentRecyclingDisruptors required String What challenges the component has for recycling. The entry should be the componentRecyclingDisruptors controlled list identifier. colour required String The actual colour of the component using CMYK (Cyan-Magenta-Yellow-blacK) values. The format is specified according to cmyk(C%, M%, Y%, K%), where C, M, Y, and K are the percent values for the cyan, magenta, yellow, and black values of the color. For example: black is cmyk(0%,0%,0%,100%) . opacity required Numeric The transparency of the colours on a 0 to 100% scale. The lower the value, the more transparent; the higher the value, the more solid. recycledContent required Numeric A percent of how much recycled content is included in the makeup of the component. For the purposes of this standard, we refer to the UK\u2019s HM Revenue & Customs definition of recycled content. \u201cRecycled plastic is plastic that has been reprocessed from recovered material by using a chemical or manufacturing process. This is so it can be used either for its original purpose or for other purposes. This does not include organic recycling. Recovered material is pre-consumer plastic or post-consumer plastic that both: a) is no longer suitable to be used in the process from which it was generated and would otherwise have been used for energy recovery (for example, by incineration) or disposed of as waste (for example, by being sent to landfill); b) has been collected and recovered for use as a material input for a recycling or manufacturing process, instead of new primary material\u201d recycledContentEvidenceType required String What evidence type supports the recycledContent claim. The entry should be the recycledContentEvidenceType controlled list identifier. recycledContentEvidenceReference required String An accompanying reference number associated with the recycledContentEvidenceType for the component. recyclability recommended Boolean Is the component recyclable? recyclabilitySource required String What source provided the recyclability claim? The entry should be the recyclabilitySource controlled list identifier. recyclabilityDate required String The date that the recyclability was provided/last updated. Use the format dd/mm/yyyy . uploadDate required String The date that the component was provided/last updated. Use the format dd/mm/yyyy . releaseDate required String The date that the component will be available to use. Use the format dd/mm/yyyy . discontinuedDate required String The date that the component will no longer be available to use. Use the format dd/mm/yyyy . Guide for how to take measurements \u00b6 Units \u00b6 All measurements should be given using the metric system. Height: millimetre (mm) Width: millimetre (mm) Length: millimetre (mm) Volume: cubic millimetre (mm3) Weight: grams (g) Numbers should be entered with a decimal place, a space between the number, and the unit as specified above. Use the decimal / full stop / period character as a separator. For example: volume = 20.000 mm3. Do not exceed 3 decimal places. Important : When converting between systems of measurement, perform the conversion first and then apply rounding. This will give more accuracy and consistency. Default Front of a component \u00b6 Prior caputuring measurements, first determine the default front of the component, this is similar to gs1 . In this standard, the default front is the face with the largest area, where area is equal to the width times the height. Important : Determining of default front provides a consistent, repeatable process to find measurements for a given component. Figure 1: An example for finding the default front of a component. The default front is the face of the with the largest area (A = width X height) Some components have the same area, thus more than one possible front. These components can be presented both vertically and horizontally. If a component has more than one possible front, the highest side is considered to be the default front. Figure 2: An example of when the area is the same for more than one face. The default front becomes the side with the maximum height. Note : Calculating the area for a rectangular component is simple. However, for non-rectangular components (for example, components with a cylindrical or irregular form), the method to calculate the area is: - First break the component into multiple sides. Then, for: - a round component, do not use (=pi*r^2) to calculate the area. Instead, draw \u201ctwo dimensional\u201d rectangles around the round component\u2019s sides and then calculate the area for each side. Figure 3: Example of a round component, breaking down the sides and drawing rectangles around them. any other shape component, draw a \u201ctwo dimensional\u201d rectangle around the sides of the component, and then calculate the area for each side. Figure 4: Example of an irregular shaped component placed inside a rectangle to determine the area for a single side. The side with the maximum area then becomes the default front of that component. Measuring the height, width, and depth of a component \u00b6 After the default front has been determined, it is possible to determine the height, width, and depth of a component. For rectangular components: Height: from the base to the top Width: from the left to the right Depth: from the front to the back If there are two different measurements for the height, width, or depth, always report the maximum measurement. Figure 5: Example of measuring the height, width, and depth for a rectangular component. Figure 6: Example of reporting the maximum width, when there are two different size widths. For irregular shaped components: Similar to finding the default front of an irregularly shaped component, draw a \u201cthree dimensional\u201d rectangle around the component. Height: from the base to the top Width: from the left to the right Depth: from the front to the back (include example with hanger) For unformed, flexible components: Take the measurements as if the component was fully formed and filled. Height: Width: Depth: For standing components: Height: from the flat surface to the top most point Width: from the left-most point to the right-most point Depth: from the default front to the farthest opposite surface For components with leaning or irregular verticlas: Height: from the flat surface to the top most point (parallel to the vertex) Width: from the left most point to the right most point Depth: from the default front to the farthest opposite surface For components that are cylindrical: For cylindrical items two dimensions will be nominally equal. Which dimensions are equal is determined by the result of determination of the default front. Measuring the volume and weight of a component \u00b6 (https://www.gs1.org/standards/gs1-package-and-product-measurement-standard/current-standard#4-Consumer-(End-user)-trade-items+4-2-Determining-the-default-front-of-an-item) Guide for component images \u00b6 As with providing measurements, please first find the default front of the component. The image capturing process and naming convention is similar to gs1 . As with measurements, we altered the gs1 standard for capturing the component. Type of Image \u00b6 For the purposes of this standard, we define the differences between photographic and rendered images. Note: both types are accepted but the naming convention will differ based on image type so that images have unique names and do not having naming conflicts. - Photographic image : the result of the electronic or chemical capture of a likeness of a physical object with the use of a camera. - Rendered image : the result of the creation of a digital likeness of a physical object with the use of a computer and software. Image Recommendations \u00b6 Provide coloured images. However, do not provide colour casts. Colour should be as rich, vibrant and eye-catching as possible Contrast and exposure should be balanced; avoid high contrast effects and \u201cblown-out\u201d highlights Images should not be overly sharpened Components should be centred in Margins to cover 95% on the canvas. Graphic rendering of a component should be realistic. Do not provide layers, guides or rulers in the images. Background layer should be white (RGB 255,255,255). Remove signatures, \u201cfinger printing\u201d or visible watermarks. No compression artifacts. No interpolation (\u201cresizing up\u201d). File size \u00b6 900x900 to 2400x2400 pixels Component faces \u00b6 After determining the default front, the possible faces, in relation to the default front, are: 1. Default Front 2. Left 3. Top 7. Back 8. Right 9. Bottom Naming convention for URL \u00b6 Please follow this naming convention: - component identifier - underscore _ - type of image ( photographic or rendered ) - underscore _ - component face ( 1 : Default front, 2 : Left, 3 : Top, 7 : Back, 8 : Right, 9 : Bottom) - orientation ( C : Centre, L : left, R : right, N : No plunge angle) Example : An image for a component that is rendered with a default front facing image and centred orientation. identifier123_rendered_1C.jpg","title":"Component Catalogue"},{"location":"4_Data_Specification/4_1_Component_Catalogue/#component-catalogue","text":"","title":"Component Catalogue"},{"location":"4_Data_Specification/4_1_Component_Catalogue/#standard-spreadsheet-format","text":"The following table lists the column headings that should be used. When providing this information, you can either build your spreadsheet from scratch, or use the template provided. component_catalogue.csv Column Status Format Notes identifier required String A globally unique identifier. See identifiers section for information on how to construct this identifier name required String The name of this component. description recommended String A brief description of this component. tags recommended String A list of identifiers that might be used to identify the component in other systems. For example: bar codes or global trade item number (gtin). To provide tags please follow this format. tagName1: identifier1; tagName2: identifier2 imageURL recommended URL A URL that links to a picture of the component. Please see the guidelines below on how to capture the image and name the URL. LOWcode recommended String The list of waste code for only the component, by itself. LOW code is synonymous with European Waste Catelogue Code (EWC). For example: an empty bottle would have a LOWcode of 15 01 02 . Please use Dsposal or legislation.gov to find the LOWcode. Note : The LOWcode can based on its combination with other components and the actual product contained in the completePackaging. Be sure to only include the component LOWcode. If you cannot find the code or are uncertain please enter Uncertain . height required String The height of the component. Please see the guidelines below on how to properly measure and report the height. heightDate required String The date that the height was last verified/measured. Use the format dd/mm/yyyy . width required String The width of the component. Please see the guidelines below on how to properly measure and report the width. widthDate required String The date that the width was last verified/measured. Use the format dd/mm/yyyy . depth required String The depth of the component. Please see the guidelines below on how to properly measure and report the depth. depthDate required String The date that the depth was last verified/measured. Use the format dd/mm/yyyy . volume required String Using the height, width, and depth found using the measurement guidelines, calculate the component\u2019s volume using: height x width x depth . Report the volume as a string with mm3 and a space between the measurement. For example: the volume is 20 mm3 . volumeDate required String The date that the volume was last verified/measured. Use the format dd/mm/yyyy . weight required String The weight of the component. TBD weightDate required String The date that the weight was last verified/measured. Use the format dd/mm/yyyy . shape required String What is the shape of the component? The entry should contain the shape controlled list identifier for the component. flexibility required String Whether the component is considered flexible or rigid. The entry should be the flexibility controlled list identifier. componentRecyclingDisruptors required String What challenges the component has for recycling. The entry should be the componentRecyclingDisruptors controlled list identifier. colour required String The actual colour of the component using CMYK (Cyan-Magenta-Yellow-blacK) values. The format is specified according to cmyk(C%, M%, Y%, K%), where C, M, Y, and K are the percent values for the cyan, magenta, yellow, and black values of the color. For example: black is cmyk(0%,0%,0%,100%) . opacity required Numeric The transparency of the colours on a 0 to 100% scale. The lower the value, the more transparent; the higher the value, the more solid. recycledContent required Numeric A percent of how much recycled content is included in the makeup of the component. For the purposes of this standard, we refer to the UK\u2019s HM Revenue & Customs definition of recycled content. \u201cRecycled plastic is plastic that has been reprocessed from recovered material by using a chemical or manufacturing process. This is so it can be used either for its original purpose or for other purposes. This does not include organic recycling. Recovered material is pre-consumer plastic or post-consumer plastic that both: a) is no longer suitable to be used in the process from which it was generated and would otherwise have been used for energy recovery (for example, by incineration) or disposed of as waste (for example, by being sent to landfill); b) has been collected and recovered for use as a material input for a recycling or manufacturing process, instead of new primary material\u201d recycledContentEvidenceType required String What evidence type supports the recycledContent claim. The entry should be the recycledContentEvidenceType controlled list identifier. recycledContentEvidenceReference required String An accompanying reference number associated with the recycledContentEvidenceType for the component. recyclability recommended Boolean Is the component recyclable? recyclabilitySource required String What source provided the recyclability claim? The entry should be the recyclabilitySource controlled list identifier. recyclabilityDate required String The date that the recyclability was provided/last updated. Use the format dd/mm/yyyy . uploadDate required String The date that the component was provided/last updated. Use the format dd/mm/yyyy . releaseDate required String The date that the component will be available to use. Use the format dd/mm/yyyy . discontinuedDate required String The date that the component will no longer be available to use. Use the format dd/mm/yyyy .","title":"Standard Spreadsheet Format"},{"location":"4_Data_Specification/4_1_Component_Catalogue/#guide-for-how-to-take-measurements","text":"","title":"Guide for how to take measurements"},{"location":"4_Data_Specification/4_1_Component_Catalogue/#units","text":"All measurements should be given using the metric system. Height: millimetre (mm) Width: millimetre (mm) Length: millimetre (mm) Volume: cubic millimetre (mm3) Weight: grams (g) Numbers should be entered with a decimal place, a space between the number, and the unit as specified above. Use the decimal / full stop / period character as a separator. For example: volume = 20.000 mm3. Do not exceed 3 decimal places. Important : When converting between systems of measurement, perform the conversion first and then apply rounding. This will give more accuracy and consistency.","title":"Units"},{"location":"4_Data_Specification/4_1_Component_Catalogue/#default-front-of-a-component","text":"Prior caputuring measurements, first determine the default front of the component, this is similar to gs1 . In this standard, the default front is the face with the largest area, where area is equal to the width times the height. Important : Determining of default front provides a consistent, repeatable process to find measurements for a given component. Figure 1: An example for finding the default front of a component. The default front is the face of the with the largest area (A = width X height) Some components have the same area, thus more than one possible front. These components can be presented both vertically and horizontally. If a component has more than one possible front, the highest side is considered to be the default front. Figure 2: An example of when the area is the same for more than one face. The default front becomes the side with the maximum height. Note : Calculating the area for a rectangular component is simple. However, for non-rectangular components (for example, components with a cylindrical or irregular form), the method to calculate the area is: - First break the component into multiple sides. Then, for: - a round component, do not use (=pi*r^2) to calculate the area. Instead, draw \u201ctwo dimensional\u201d rectangles around the round component\u2019s sides and then calculate the area for each side. Figure 3: Example of a round component, breaking down the sides and drawing rectangles around them. any other shape component, draw a \u201ctwo dimensional\u201d rectangle around the sides of the component, and then calculate the area for each side. Figure 4: Example of an irregular shaped component placed inside a rectangle to determine the area for a single side. The side with the maximum area then becomes the default front of that component.","title":"Default Front of a component"},{"location":"4_Data_Specification/4_1_Component_Catalogue/#measuring-the-height-width-and-depth-of-a-component","text":"After the default front has been determined, it is possible to determine the height, width, and depth of a component. For rectangular components: Height: from the base to the top Width: from the left to the right Depth: from the front to the back If there are two different measurements for the height, width, or depth, always report the maximum measurement. Figure 5: Example of measuring the height, width, and depth for a rectangular component. Figure 6: Example of reporting the maximum width, when there are two different size widths. For irregular shaped components: Similar to finding the default front of an irregularly shaped component, draw a \u201cthree dimensional\u201d rectangle around the component. Height: from the base to the top Width: from the left to the right Depth: from the front to the back (include example with hanger) For unformed, flexible components: Take the measurements as if the component was fully formed and filled. Height: Width: Depth: For standing components: Height: from the flat surface to the top most point Width: from the left-most point to the right-most point Depth: from the default front to the farthest opposite surface For components with leaning or irregular verticlas: Height: from the flat surface to the top most point (parallel to the vertex) Width: from the left most point to the right most point Depth: from the default front to the farthest opposite surface For components that are cylindrical: For cylindrical items two dimensions will be nominally equal. Which dimensions are equal is determined by the result of determination of the default front.","title":"Measuring the height, width, and depth of a component"},{"location":"4_Data_Specification/4_1_Component_Catalogue/#measuring-the-volume-and-weight-of-a-component","text":"(https://www.gs1.org/standards/gs1-package-and-product-measurement-standard/current-standard#4-Consumer-(End-user)-trade-items+4-2-Determining-the-default-front-of-an-item)","title":"Measuring the volume and weight of a component"},{"location":"4_Data_Specification/4_1_Component_Catalogue/#guide-for-component-images","text":"As with providing measurements, please first find the default front of the component. The image capturing process and naming convention is similar to gs1 . As with measurements, we altered the gs1 standard for capturing the component.","title":"Guide for component images"},{"location":"4_Data_Specification/4_1_Component_Catalogue/#type-of-image","text":"For the purposes of this standard, we define the differences between photographic and rendered images. Note: both types are accepted but the naming convention will differ based on image type so that images have unique names and do not having naming conflicts. - Photographic image : the result of the electronic or chemical capture of a likeness of a physical object with the use of a camera. - Rendered image : the result of the creation of a digital likeness of a physical object with the use of a computer and software.","title":"Type of Image"},{"location":"4_Data_Specification/4_1_Component_Catalogue/#image-recommendations","text":"Provide coloured images. However, do not provide colour casts. Colour should be as rich, vibrant and eye-catching as possible Contrast and exposure should be balanced; avoid high contrast effects and \u201cblown-out\u201d highlights Images should not be overly sharpened Components should be centred in Margins to cover 95% on the canvas. Graphic rendering of a component should be realistic. Do not provide layers, guides or rulers in the images. Background layer should be white (RGB 255,255,255). Remove signatures, \u201cfinger printing\u201d or visible watermarks. No compression artifacts. No interpolation (\u201cresizing up\u201d).","title":"Image Recommendations"},{"location":"4_Data_Specification/4_1_Component_Catalogue/#file-size","text":"900x900 to 2400x2400 pixels","title":"File size"},{"location":"4_Data_Specification/4_1_Component_Catalogue/#component-faces","text":"After determining the default front, the possible faces, in relation to the default front, are: 1. Default Front 2. Left 3. Top 7. Back 8. Right 9. Bottom","title":"Component faces"},{"location":"4_Data_Specification/4_1_Component_Catalogue/#naming-convention-for-url","text":"Please follow this naming convention: - component identifier - underscore _ - type of image ( photographic or rendered ) - underscore _ - component face ( 1 : Default front, 2 : Left, 3 : Top, 7 : Back, 8 : Right, 9 : Bottom) - orientation ( C : Centre, L : left, R : right, N : No plunge angle) Example : An image for a component that is rendered with a default front facing image and centred orientation. identifier123_rendered_1C.jpg","title":"Naming convention for URL"},{"location":"4_Data_Specification/4_2_Component_Catalogue_Materials/","text":"Component Catalogue Materials \u00b6 Materials should be provided as a separate csv file, in tidy format. This means that each row of the csv file should be one material for a component. An example is provided. The specification of this csv file is as follows: component_catalogue_material.csv Column Status Format Notes identifier required String A globally unique identifier. See identifiers section for information on how to construct this identifier componentCatalogue required String The unique identifier of the component that this row relates to. There must be an equivalent record in the component_Catalogue data layer required integer The layer associated with the component. The inner most layer (the layer closest to the product) denoted as 1, and the outermost layer is the biggest number. materialWeight required numeric The percentage of the total materials making-up the component. For every unique componentCatalogue, weightMaterial should add to 100%. materialType required String Is the material \u2018synthetic\u2019 or \u2018biobased\u2019? Use the identifier of the material type that this row relates to. The entry here should be drawn from the material type controlled list. materialFunction required String Why is this material being used? Use the identifier of the material function that this row relates to. The entry here should be drawn from the material function controlled list. materialCategory required String The category this material row relates to. The entry here should be drawn from the material category controlled list. materialChemCID required String The PubChem CID for the exact material used. The PubChem CID is PubChem\u2019s compound identifier, which is a non-zero integer for a unique chemical structure. PubChem CID can be found using their search . If for some reason the PubChem CID cannot be located, consider contributing to PubChem and create the compound identifier. However, if this cannot be done, please enter Unknown . materialOther required String If the materialChemCID is Unknown , please enter the unique material here. materialPrivacy required Boolean Is the unique materialChemCID or materialOther anonymous/ privately protected? virginMaterial required numeric The percent of the material that was newly created for the component.","title":"Component Catalogue Materials"},{"location":"4_Data_Specification/4_2_Component_Catalogue_Materials/#component-catalogue-materials","text":"Materials should be provided as a separate csv file, in tidy format. This means that each row of the csv file should be one material for a component. An example is provided. The specification of this csv file is as follows: component_catalogue_material.csv Column Status Format Notes identifier required String A globally unique identifier. See identifiers section for information on how to construct this identifier componentCatalogue required String The unique identifier of the component that this row relates to. There must be an equivalent record in the component_Catalogue data layer required integer The layer associated with the component. The inner most layer (the layer closest to the product) denoted as 1, and the outermost layer is the biggest number. materialWeight required numeric The percentage of the total materials making-up the component. For every unique componentCatalogue, weightMaterial should add to 100%. materialType required String Is the material \u2018synthetic\u2019 or \u2018biobased\u2019? Use the identifier of the material type that this row relates to. The entry here should be drawn from the material type controlled list. materialFunction required String Why is this material being used? Use the identifier of the material function that this row relates to. The entry here should be drawn from the material function controlled list. materialCategory required String The category this material row relates to. The entry here should be drawn from the material category controlled list. materialChemCID required String The PubChem CID for the exact material used. The PubChem CID is PubChem\u2019s compound identifier, which is a non-zero integer for a unique chemical structure. PubChem CID can be found using their search . If for some reason the PubChem CID cannot be located, consider contributing to PubChem and create the compound identifier. However, if this cannot be done, please enter Unknown . materialOther required String If the materialChemCID is Unknown , please enter the unique material here. materialPrivacy required Boolean Is the unique materialChemCID or materialOther anonymous/ privately protected? virginMaterial required numeric The percent of the material that was newly created for the component.","title":"Component Catalogue Materials"},{"location":"4_Data_Specification/4_3_Unique_Component/","text":"Unique Component \u00b6 From the component catelogue, information differs based on the application of the component. Pull the component catelogue item to add unique information. unique_component.csv Column Status Format Notes identifier required String A globally unique identifier. See identifiers section for information on how to construct this identifier name required String The name of this component. description recommended String A brief description of this component. tags recommended String A list of identifiers that might be used to identify the component in other systems. For example: bar codes or global trade item number (gtin). To provide tags please follow this format. tagName1: identifier1; tagName2: identifier2 componentCatalogue required String The unique identifier of the component that this row relates to. There must be an equivalent record in the component_Catalogue data level required String The component level of packaging in the system i.e., primary, secondary, tertiary . Use the identifier of the level that this row relates to. The entry here should be drawn from the level controlled list. reuseSystem required String The system that facilitates the reuse of the component e.g., Loop importedUK required Boolean Is the component manufactured in the UK? manufacturedCountry required Numeric The country the component was manufactured in. Use the country numeric ISO codes as described in the ISO 3166 international standard. directContactWithProduct required Boolean Does the component come into direct contact with the product before purchased by a consumer? uniqueComponentRecyclingDisruptors required String What challenges the unique component has for recycling. The entry should be the uniqueComponentRecyclingDisruptors controlled list identifier. uploadDate required String The date that the component was provided/last updated. Use the format dd/mm/yyyy . releaseDate required String The date that the component will be available to use. Use the format dd/mm/yyyy . discontinuedDate required String The date that the component will no longer be available to use. Use the format dd/mm/yyyy .","title":"Unique Component"},{"location":"4_Data_Specification/4_3_Unique_Component/#unique-component","text":"From the component catelogue, information differs based on the application of the component. Pull the component catelogue item to add unique information. unique_component.csv Column Status Format Notes identifier required String A globally unique identifier. See identifiers section for information on how to construct this identifier name required String The name of this component. description recommended String A brief description of this component. tags recommended String A list of identifiers that might be used to identify the component in other systems. For example: bar codes or global trade item number (gtin). To provide tags please follow this format. tagName1: identifier1; tagName2: identifier2 componentCatalogue required String The unique identifier of the component that this row relates to. There must be an equivalent record in the component_Catalogue data level required String The component level of packaging in the system i.e., primary, secondary, tertiary . Use the identifier of the level that this row relates to. The entry here should be drawn from the level controlled list. reuseSystem required String The system that facilitates the reuse of the component e.g., Loop importedUK required Boolean Is the component manufactured in the UK? manufacturedCountry required Numeric The country the component was manufactured in. Use the country numeric ISO codes as described in the ISO 3166 international standard. directContactWithProduct required Boolean Does the component come into direct contact with the product before purchased by a consumer? uniqueComponentRecyclingDisruptors required String What challenges the unique component has for recycling. The entry should be the uniqueComponentRecyclingDisruptors controlled list identifier. uploadDate required String The date that the component was provided/last updated. Use the format dd/mm/yyyy . releaseDate required String The date that the component will be available to use. Use the format dd/mm/yyyy . discontinuedDate required String The date that the component will no longer be available to use. Use the format dd/mm/yyyy .","title":"Unique Component"},{"location":"4_Data_Specification/4_4_Complete_Packaging/","text":"Complete Packaging \u00b6 We can now use the unique components, to create a complete packaging. The specification of this csv file is as follows: complete_packaging.csv Column Status Format Notes identifier required String A globally unique identifier. See identifiers section for information on how to construct this identifier name required String The name of this complete packaging. description recommended String A brief description of this complete packaging. tags recommended String A list of identifiers that might be used to identify the complete packaging in other systems. For example: bar codes or global trade item number (gtin). To provide tags please follow this format. tagName1: identifier1; tagName2: identifier2 imageURL recommended URL A URL that links to a picture of the complete packaging. Please see the guidelines below on how to capture the image and name the URL. independentComponent required String The component identifier from the unique component that is independently created. There must be an equivalent record in the unique_Component data. If all the components were created together use NA . If there are multiple components, separate with a semicolon. e.g. component1; component2 previouslyAssembledComponent required String The component identifier from the unique component that was combined with other components when created. There must be an equivalent record in the unique_Component data. If all the components were independently created use NA . If there are multiple components, separate with a semicolon. e.g. component1; component2 allComponent required String All of the component identifiers from the unique component that are combined to create the complete packaging. There must be an equivalent record in the unique_Component data for all component identifiers. If there are multiple components, separate with a semicolon. e.g. component1; component2 LOWcodeWOproduct required String The list of waste code for only the complete packaging, by itself (excluding the product). LOW code is synonymous with European Waste Catelogue Code (EWC). For example: an empty bottle would have a LOWcode of 15 01 02 . Please use Dsposal or legislation.gov to find the LOWcode. Note : The LOWcode can based on its combination with other components and the actual product contained in the complete packaging. Be sure to only include the complete packaging LOWcode and not the complete packaging with the product. If you cannot find the code or are uncertain please enter Uncertain . productType required String Information about the product contained in the complete packaging. The entry here should be drawn from the product type controlled list. LOWcodeWproduct required String The list of waste code for everything in the complete packaging. LOW code is synonymous with European Waste Catelogue Code (EWC). For example: an empty bottle would have a LOWcode of 15 01 02 . Please use Dsposal or legislation.gov to find the LOWcode. Note : The LOWcode can based on its combination with other components and the actual product contained in the complete packaging. Be sure to include the complete packaging LOWcode with the product. If you cannot find the code or are uncertain please enter Uncertain . onTheGo required Boolean Is the complete packaging often classed as packaging that will end up in street bins? householdWaste required Boolean Is the complete packaging often classed as packaging that will end up in kerbside collections? depositReturnScheme required String Which countries in the United Kingdom support a deposit return scheme for this particular complete packaging? The entry here should be drawn from the deposit return scheme controlled list. recyclingDisruptors required String What challenges the complete packaging has for recycling. The entry should be the recycling disruptors controlled list identifier. recyclability recommended Boolean Is the complete packaging recyclable? recyclabilitySource required String What source provided the recyclability claim? The entry should be the recyclabilitySource controlled list identifier. recyclabilityDate required String The date that the recyclability was provided/last updated. Use the format dd/mm/yyyy . height required String The height of the complete packaging. Please see the guidelines below on how to properly measure and report the height. heightDate required String The date that the height was last verified/measured. Use the format dd/mm/yyyy . width required String The width of the complete packaging. Please see the guidelines below on how to properly measure and report the width. widthDate required String The date that the width was last verified/measured. Use the format dd/mm/yyyy . depth required String The depth of the complete packaging. Please see the guidelines below on how to properly measure and report the depth. depthDate required String The date that the depth was last verified/measured. Use the format dd/mm/yyyy . volume required String Using the height, width, and depth found using the measurement guidelines, calculate the complete packaging\u2019s volume using: height x width x depth . Report the volume as a string with mm3 and a space between the measurement. For example: the volume is 20 mm3 . volumeDate required String The date that the volume was last verified/measured. Use the format dd/mm/yyyy . weight required String The weight of the complete packaging. TBD weightDate required String The date that the weight was last verified/measured. Use the format dd/mm/yyyy . servingCapacity required String The serving capacity of the complete packaging - how much of a product that can be contained in the complete packaging servingCapacityDate required String The date that the serving capacity was last verified/measured. Use the format dd/mm/yyyy . partOfMultipack required Boolean Is the complete packaging part of a multipack? uploadDate required String The date that the component was provided/last updated. Use the format dd/mm/yyyy . releaseDate required String The date that the component will be available to use. Use the format dd/mm/yyyy . discontinuedDate required String The date that the component will no longer be available to use. Use the format dd/mm/yyyy . Guide for how to take measurements \u00b6 Units \u00b6 All measurements should be given using the metric system. Height: millimetre (mm) Width: millimetre (mm) Length: millimetre (mm) Volume: cubic millimetre (mm3) Weight: grams (g) servingCapacity: grams (g) Numbers should be entered with a decimal place, a space between the number, and the unit as specified above. Use the decimal / full stop / period character as a separator. For example: volume = 20.000 mm3. Do not exceed 3 decimal places. Important : When converting between systems of measurement, perform the conversion first and then apply rounding. This will give more accuracy and consistency. Default Front of a complete packaging \u00b6 Prior caputuring measurements, first determine the default front of the complete packaging, this is similar to gs1 . In this standard, the default front is the face with the largest area, where area is equal to the width times the height. Important : Determining of default front provides a consistent, repeatable process to find measurements for a given complete packaging. Figure 1: An example for finding the default front of a complete packaging. The default front is the face of the with the largest area (A = width X height) Some complete packaging have the same area, thus more than one possible front. These complete packaging can be presented both vertically and horizontally. If a complete packaging has more than one possible front, the highest side is considered to be the default front. Figure 2: An example of when the area is the same for more than one face. The default front becomes the side with the maximum height. Note : Calculating the area for a rectangular complete packaging is simple. However, for non-rectangular complete packaging (for example, complete packaging with a cylindrical or irregular form), the method to calculate the area is: - First break the complete packaging into multiple sides. Then, for: - a round complete packaging, do not use (=pi*r^2) to calculate the area. Instead, draw \u201ctwo dimensional\u201d rectangles around the round complete packaging\u2019s sides and then calculate the area for each side. Figure 3: Example of a round complete packaging, breaking down the sides and drawing rectangles around them. any other shape complete packaging, draw a \u201ctwo dimensional\u201d rectangle around the sides of the complete packaging, and then calculate the area for each side. Figure 4: Example of an irregular shaped complete packaging placed inside a rectangle to determine the area for a single side. The side with the maximum area then becomes the default front of that complete packaging. Measuring the height, width, and depth of a complete packaging \u00b6 After the default front has been determined, it is possible to determine the height, width, and depth of the complete packaging. For rectangular complete packaging: Height: from the base to the top Width: from the left to the right Depth: from the front to the back If there are two different measurements for the height, width, or depth, always report the maximum measurement. Figure 5: Example of measuring the height, width, and depth for a rectangular complete packaging. Figure 6: Example of reporting the maximum width, when there are two different size widths. For irregular shaped complete packaging: Similar to finding the default front of an irregularly shaped complete packaging, draw a \u201cthree dimensional\u201d rectangle around the complete packaging. Height: from the base to the top Width: from the left to the right Depth: from the front to the back (include example with hanger) For unformed, flexible complete packaging: Take the measurements as if the complete packaging was fully formed and filled. Height: Width: Depth: For standing complete packaging: Height: from the flat surface to the top most point Width: from the left-most point to the right-most point Depth: from the default front to the farthest opposite surface For complete packaging with leaning or irregular verticlas: Height: from the flat surface to the top most point (parallel to the vertex) Width: from the left most point to the right most point Depth: from the default front to the farthest opposite surface For complete packaging that are cylindrical: For cylindrical items two dimensions will be nominally equal. Which dimensions are equal is determined by the result of determination of the default front. (https://www.gs1.org/standards/gs1-package-and-product-measurement-standard/current-standard#4-Consumer-(End-user)-trade-items+4-2-Determining-the-default-front-of-an-item) Guide for complete packaging images \u00b6 As with providing measurements, please first find the default front of the complete packaging. The image capturing process and naming convention is similar to gs1 . Type of Image \u00b6 For the purposes of this standard, we define the differences between photographic and rendered images. Note: both types are accepted but the naming convention will differ based on image type so that images have unique names and do not have naming conflicts. - Photographic image : the result of the electronic or chemical capture of a likeness of a physical object with the use of a camera. - Rendered image : the result of the creation of a digital likeness of a physical object with the use of a computer and software. Image Recommendations \u00b6 Provide coloured images. However, do not provide colour casts. Colour should be as rich, vibrant and eye-catching as possible Contrast and exposure should be balanced; avoid high contrast effects and \u201cblown-out\u201d highlights Images should not be overly sharpened Complete Packaging should be centred in Margins to cover 95% on the canvas. Graphic rendering of a complete packaging should be realistic. Do not provide layers, guides or rulers in the images. Background layer should be white (RGB 255,255,255). Remove signatures, \u201cfinger printing\u201d or visible watermarks. No compression artifacts. No interpolation (\u201cresizing up\u201d). File size \u00b6 900x900 to 2400x2400 pixels Complete Packaging faces \u00b6 After determining the default front, the possible faces, in relation to the default front, are: 1. Default Front 2. Left 3. Top 7. Back 8. Right 9. Bottom Naming convention for URL \u00b6 Please follow this naming convention: - complete packaging identifier - underscore _ - type of image ( photographic or rendered ) - underscore _ - component face ( 1 : Default front, 2 : Left, 3 : Top, 7 : Back, 8 : Right, 9 : Bottom) - orientation ( C : Centre, L : left, R : right, N : No plunge angle) Example : An image for a complete packaging that is rendered with a default front facing image and centred orientation. 123_rendered_1C.jpg","title":"Complete Packaging"},{"location":"4_Data_Specification/4_4_Complete_Packaging/#complete-packaging","text":"We can now use the unique components, to create a complete packaging. The specification of this csv file is as follows: complete_packaging.csv Column Status Format Notes identifier required String A globally unique identifier. See identifiers section for information on how to construct this identifier name required String The name of this complete packaging. description recommended String A brief description of this complete packaging. tags recommended String A list of identifiers that might be used to identify the complete packaging in other systems. For example: bar codes or global trade item number (gtin). To provide tags please follow this format. tagName1: identifier1; tagName2: identifier2 imageURL recommended URL A URL that links to a picture of the complete packaging. Please see the guidelines below on how to capture the image and name the URL. independentComponent required String The component identifier from the unique component that is independently created. There must be an equivalent record in the unique_Component data. If all the components were created together use NA . If there are multiple components, separate with a semicolon. e.g. component1; component2 previouslyAssembledComponent required String The component identifier from the unique component that was combined with other components when created. There must be an equivalent record in the unique_Component data. If all the components were independently created use NA . If there are multiple components, separate with a semicolon. e.g. component1; component2 allComponent required String All of the component identifiers from the unique component that are combined to create the complete packaging. There must be an equivalent record in the unique_Component data for all component identifiers. If there are multiple components, separate with a semicolon. e.g. component1; component2 LOWcodeWOproduct required String The list of waste code for only the complete packaging, by itself (excluding the product). LOW code is synonymous with European Waste Catelogue Code (EWC). For example: an empty bottle would have a LOWcode of 15 01 02 . Please use Dsposal or legislation.gov to find the LOWcode. Note : The LOWcode can based on its combination with other components and the actual product contained in the complete packaging. Be sure to only include the complete packaging LOWcode and not the complete packaging with the product. If you cannot find the code or are uncertain please enter Uncertain . productType required String Information about the product contained in the complete packaging. The entry here should be drawn from the product type controlled list. LOWcodeWproduct required String The list of waste code for everything in the complete packaging. LOW code is synonymous with European Waste Catelogue Code (EWC). For example: an empty bottle would have a LOWcode of 15 01 02 . Please use Dsposal or legislation.gov to find the LOWcode. Note : The LOWcode can based on its combination with other components and the actual product contained in the complete packaging. Be sure to include the complete packaging LOWcode with the product. If you cannot find the code or are uncertain please enter Uncertain . onTheGo required Boolean Is the complete packaging often classed as packaging that will end up in street bins? householdWaste required Boolean Is the complete packaging often classed as packaging that will end up in kerbside collections? depositReturnScheme required String Which countries in the United Kingdom support a deposit return scheme for this particular complete packaging? The entry here should be drawn from the deposit return scheme controlled list. recyclingDisruptors required String What challenges the complete packaging has for recycling. The entry should be the recycling disruptors controlled list identifier. recyclability recommended Boolean Is the complete packaging recyclable? recyclabilitySource required String What source provided the recyclability claim? The entry should be the recyclabilitySource controlled list identifier. recyclabilityDate required String The date that the recyclability was provided/last updated. Use the format dd/mm/yyyy . height required String The height of the complete packaging. Please see the guidelines below on how to properly measure and report the height. heightDate required String The date that the height was last verified/measured. Use the format dd/mm/yyyy . width required String The width of the complete packaging. Please see the guidelines below on how to properly measure and report the width. widthDate required String The date that the width was last verified/measured. Use the format dd/mm/yyyy . depth required String The depth of the complete packaging. Please see the guidelines below on how to properly measure and report the depth. depthDate required String The date that the depth was last verified/measured. Use the format dd/mm/yyyy . volume required String Using the height, width, and depth found using the measurement guidelines, calculate the complete packaging\u2019s volume using: height x width x depth . Report the volume as a string with mm3 and a space between the measurement. For example: the volume is 20 mm3 . volumeDate required String The date that the volume was last verified/measured. Use the format dd/mm/yyyy . weight required String The weight of the complete packaging. TBD weightDate required String The date that the weight was last verified/measured. Use the format dd/mm/yyyy . servingCapacity required String The serving capacity of the complete packaging - how much of a product that can be contained in the complete packaging servingCapacityDate required String The date that the serving capacity was last verified/measured. Use the format dd/mm/yyyy . partOfMultipack required Boolean Is the complete packaging part of a multipack? uploadDate required String The date that the component was provided/last updated. Use the format dd/mm/yyyy . releaseDate required String The date that the component will be available to use. Use the format dd/mm/yyyy . discontinuedDate required String The date that the component will no longer be available to use. Use the format dd/mm/yyyy .","title":"Complete Packaging"},{"location":"4_Data_Specification/4_4_Complete_Packaging/#guide-for-how-to-take-measurements","text":"","title":"Guide for how to take measurements"},{"location":"4_Data_Specification/4_4_Complete_Packaging/#units","text":"All measurements should be given using the metric system. Height: millimetre (mm) Width: millimetre (mm) Length: millimetre (mm) Volume: cubic millimetre (mm3) Weight: grams (g) servingCapacity: grams (g) Numbers should be entered with a decimal place, a space between the number, and the unit as specified above. Use the decimal / full stop / period character as a separator. For example: volume = 20.000 mm3. Do not exceed 3 decimal places. Important : When converting between systems of measurement, perform the conversion first and then apply rounding. This will give more accuracy and consistency.","title":"Units"},{"location":"4_Data_Specification/4_4_Complete_Packaging/#default-front-of-a-complete-packaging","text":"Prior caputuring measurements, first determine the default front of the complete packaging, this is similar to gs1 . In this standard, the default front is the face with the largest area, where area is equal to the width times the height. Important : Determining of default front provides a consistent, repeatable process to find measurements for a given complete packaging. Figure 1: An example for finding the default front of a complete packaging. The default front is the face of the with the largest area (A = width X height) Some complete packaging have the same area, thus more than one possible front. These complete packaging can be presented both vertically and horizontally. If a complete packaging has more than one possible front, the highest side is considered to be the default front. Figure 2: An example of when the area is the same for more than one face. The default front becomes the side with the maximum height. Note : Calculating the area for a rectangular complete packaging is simple. However, for non-rectangular complete packaging (for example, complete packaging with a cylindrical or irregular form), the method to calculate the area is: - First break the complete packaging into multiple sides. Then, for: - a round complete packaging, do not use (=pi*r^2) to calculate the area. Instead, draw \u201ctwo dimensional\u201d rectangles around the round complete packaging\u2019s sides and then calculate the area for each side. Figure 3: Example of a round complete packaging, breaking down the sides and drawing rectangles around them. any other shape complete packaging, draw a \u201ctwo dimensional\u201d rectangle around the sides of the complete packaging, and then calculate the area for each side. Figure 4: Example of an irregular shaped complete packaging placed inside a rectangle to determine the area for a single side. The side with the maximum area then becomes the default front of that complete packaging.","title":"Default Front of a complete packaging"},{"location":"4_Data_Specification/4_4_Complete_Packaging/#measuring-the-height-width-and-depth-of-a-complete-packaging","text":"After the default front has been determined, it is possible to determine the height, width, and depth of the complete packaging. For rectangular complete packaging: Height: from the base to the top Width: from the left to the right Depth: from the front to the back If there are two different measurements for the height, width, or depth, always report the maximum measurement. Figure 5: Example of measuring the height, width, and depth for a rectangular complete packaging. Figure 6: Example of reporting the maximum width, when there are two different size widths. For irregular shaped complete packaging: Similar to finding the default front of an irregularly shaped complete packaging, draw a \u201cthree dimensional\u201d rectangle around the complete packaging. Height: from the base to the top Width: from the left to the right Depth: from the front to the back (include example with hanger) For unformed, flexible complete packaging: Take the measurements as if the complete packaging was fully formed and filled. Height: Width: Depth: For standing complete packaging: Height: from the flat surface to the top most point Width: from the left-most point to the right-most point Depth: from the default front to the farthest opposite surface For complete packaging with leaning or irregular verticlas: Height: from the flat surface to the top most point (parallel to the vertex) Width: from the left most point to the right most point Depth: from the default front to the farthest opposite surface For complete packaging that are cylindrical: For cylindrical items two dimensions will be nominally equal. Which dimensions are equal is determined by the result of determination of the default front. (https://www.gs1.org/standards/gs1-package-and-product-measurement-standard/current-standard#4-Consumer-(End-user)-trade-items+4-2-Determining-the-default-front-of-an-item)","title":"Measuring the height, width, and depth of a complete packaging"},{"location":"4_Data_Specification/4_4_Complete_Packaging/#guide-for-complete-packaging-images","text":"As with providing measurements, please first find the default front of the complete packaging. The image capturing process and naming convention is similar to gs1 .","title":"Guide for complete packaging images"},{"location":"4_Data_Specification/4_4_Complete_Packaging/#type-of-image","text":"For the purposes of this standard, we define the differences between photographic and rendered images. Note: both types are accepted but the naming convention will differ based on image type so that images have unique names and do not have naming conflicts. - Photographic image : the result of the electronic or chemical capture of a likeness of a physical object with the use of a camera. - Rendered image : the result of the creation of a digital likeness of a physical object with the use of a computer and software.","title":"Type of Image"},{"location":"4_Data_Specification/4_4_Complete_Packaging/#image-recommendations","text":"Provide coloured images. However, do not provide colour casts. Colour should be as rich, vibrant and eye-catching as possible Contrast and exposure should be balanced; avoid high contrast effects and \u201cblown-out\u201d highlights Images should not be overly sharpened Complete Packaging should be centred in Margins to cover 95% on the canvas. Graphic rendering of a complete packaging should be realistic. Do not provide layers, guides or rulers in the images. Background layer should be white (RGB 255,255,255). Remove signatures, \u201cfinger printing\u201d or visible watermarks. No compression artifacts. No interpolation (\u201cresizing up\u201d).","title":"Image Recommendations"},{"location":"4_Data_Specification/4_4_Complete_Packaging/#file-size","text":"900x900 to 2400x2400 pixels","title":"File size"},{"location":"4_Data_Specification/4_4_Complete_Packaging/#complete-packaging-faces","text":"After determining the default front, the possible faces, in relation to the default front, are: 1. Default Front 2. Left 3. Top 7. Back 8. Right 9. Bottom","title":"Complete Packaging faces"},{"location":"4_Data_Specification/4_4_Complete_Packaging/#naming-convention-for-url","text":"Please follow this naming convention: - complete packaging identifier - underscore _ - type of image ( photographic or rendered ) - underscore _ - component face ( 1 : Default front, 2 : Left, 3 : Top, 7 : Back, 8 : Right, 9 : Bottom) - orientation ( C : Centre, L : left, R : right, N : No plunge angle) Example : An image for a complete packaging that is rendered with a default front facing image and centred orientation. 123_rendered_1C.jpg","title":"Naming convention for URL"},{"location":"4_Data_Specification/4_5_Multipack/","text":"Multipack \u00b6 If the complete packaging is further combined to create multipacks, the information is collected here. Each row corresponds to a unique complete packaging item or a unique component. The specification of this csv file is as follows: multipack.csv Column Status Format Notes identifier required String A globally unique identifier. See identifiers section for information on how to construct this identifier name required String The name of this multipack. description recommended String A brief description of this multipack. tags recommended String A list of identifiers that might be used to identify the multipack in other systems. For example: bar codes or global trade item number (gtin). To provide tags please follow this format. tagName1: identifier1; tagName2: identifier2 multipackIdentifier required String The unique identifier of the created multipack. A globally unique identifier. See identifiers section for information on how to construct this identifier. completePackaging required String The unique identifier of the complete packaging that this row relates to. There must be an equivalent record in the completePackaging data. If referring to components, use NA . component required String The unique identifier of the unique component that this row relates to. There must be an equivalent record in the uniqueComponent data. If referring to complete packaging, use NA . tier required Integer The tier associated with the multipack. The inner most tier denoted as 1, and the outermost tier is the biggest number. outsideTier required Boolean Is this the very outside of the multipack? identicalQuantity required Numeric Number of identical units for the unique complete packaging item or a unique component this row corresponds to. uploadDate required String The date that the component was provided/last updated. Use the format dd/mm/yyyy . releaseDate required String The date that the component will be available to use. Use the format dd/mm/yyyy . discontinuedDate required String The date that the component will no longer be available to use. Use the format dd/mm/yyyy .","title":"Multipack"},{"location":"4_Data_Specification/4_5_Multipack/#multipack","text":"If the complete packaging is further combined to create multipacks, the information is collected here. Each row corresponds to a unique complete packaging item or a unique component. The specification of this csv file is as follows: multipack.csv Column Status Format Notes identifier required String A globally unique identifier. See identifiers section for information on how to construct this identifier name required String The name of this multipack. description recommended String A brief description of this multipack. tags recommended String A list of identifiers that might be used to identify the multipack in other systems. For example: bar codes or global trade item number (gtin). To provide tags please follow this format. tagName1: identifier1; tagName2: identifier2 multipackIdentifier required String The unique identifier of the created multipack. A globally unique identifier. See identifiers section for information on how to construct this identifier. completePackaging required String The unique identifier of the complete packaging that this row relates to. There must be an equivalent record in the completePackaging data. If referring to components, use NA . component required String The unique identifier of the unique component that this row relates to. There must be an equivalent record in the uniqueComponent data. If referring to complete packaging, use NA . tier required Integer The tier associated with the multipack. The inner most tier denoted as 1, and the outermost tier is the biggest number. outsideTier required Boolean Is this the very outside of the multipack? identicalQuantity required Numeric Number of identical units for the unique complete packaging item or a unique component this row corresponds to. uploadDate required String The date that the component was provided/last updated. Use the format dd/mm/yyyy . releaseDate required String The date that the component will be available to use. Use the format dd/mm/yyyy . discontinuedDate required String The date that the component will no longer be available to use. Use the format dd/mm/yyyy .","title":"Multipack"},{"location":"4_Data_Specification/4_6_Load/","text":"Load \u00b6 All the complete packaging from different levels (primary, secondary, and tertiary), including multipacks, put together to send to the final destination. Each row corresponds a unique complete packaging (or multipack) item sent to a specific location during a specific time period. The specification of this csv file is as follows: load.csv Column Status Format Notes identifier required String A globally unique identifier. See identifiers section for information on how to construct this identifier name required String The name of this load. description recommended String A brief description of this load. tags recommended String A list of identifiers that might be used to identify the load in other systems. For example: bar codes or global trade item number (gtin). To provide tags please follow this format. tagName1: identifier1; tagName2: identifier2 loadIdentifier required String The unique identifier of the created load. A globally unique identifier. See identifiers section for information on how to construct this identifier. packagingItems required String The complete packaging and/or the multipack identifiers used to create the load. There must be an equivalent record in the complete_packaging or multipack data. quantityInLoad required Numeric Number of units for the packaging items found in a load that this row corresponds to. startDate required String The date that the load began for the destination. Use the format dd/mm/yyyy . endDate required String The date that the load ended for the destination. Use the format dd/mm/yyyy . destinationAddressName recommended String The name of the load destination address. destinationAddressStreet required String The street address of this load destination. destinationAddressCountry required String The country of this load destination. destinationPostalCode required String The postal code of this load destination. timesSent required Numeric The number of times this load was sent to the destination during the specified time period.","title":"Load"},{"location":"4_Data_Specification/4_6_Load/#load","text":"All the complete packaging from different levels (primary, secondary, and tertiary), including multipacks, put together to send to the final destination. Each row corresponds a unique complete packaging (or multipack) item sent to a specific location during a specific time period. The specification of this csv file is as follows: load.csv Column Status Format Notes identifier required String A globally unique identifier. See identifiers section for information on how to construct this identifier name required String The name of this load. description recommended String A brief description of this load. tags recommended String A list of identifiers that might be used to identify the load in other systems. For example: bar codes or global trade item number (gtin). To provide tags please follow this format. tagName1: identifier1; tagName2: identifier2 loadIdentifier required String The unique identifier of the created load. A globally unique identifier. See identifiers section for information on how to construct this identifier. packagingItems required String The complete packaging and/or the multipack identifiers used to create the load. There must be an equivalent record in the complete_packaging or multipack data. quantityInLoad required Numeric Number of units for the packaging items found in a load that this row corresponds to. startDate required String The date that the load began for the destination. Use the format dd/mm/yyyy . endDate required String The date that the load ended for the destination. Use the format dd/mm/yyyy . destinationAddressName recommended String The name of the load destination address. destinationAddressStreet required String The street address of this load destination. destinationAddressCountry required String The country of this load destination. destinationPostalCode required String The postal code of this load destination. timesSent required Numeric The number of times this load was sent to the destination during the specified time period.","title":"Load"},{"location":"5_Identifiers/5_1_Identifiers/","text":"Identifiers \u00b6 Identifiers are the way that humans and machines can know that a particular thing is definitely that thing. In the context of Open3P, there are different ways of talking about the various things involved. A packaging manufacturer may refer to a particular bottle as \u2018small clear bottle\u2019, but a filler may know it as \u2018500 ml clear bottle\u2019. In a database it may be recorded as \u20180.5L PET Bottle\u2019. While these are all referring to the same thing, it could be hard for a human to know that they are the same, and pretty much impossible for a computer. To help get around this, we use identifiers. These are codes that we use to unambiguously reference a particular thing in our database. We will provide documentation soon to explain how to create unique identifiers for everything being described in the Open3P standard.","title":"Identifiers"},{"location":"5_Identifiers/5_1_Identifiers/#identifiers","text":"Identifiers are the way that humans and machines can know that a particular thing is definitely that thing. In the context of Open3P, there are different ways of talking about the various things involved. A packaging manufacturer may refer to a particular bottle as \u2018small clear bottle\u2019, but a filler may know it as \u2018500 ml clear bottle\u2019. In a database it may be recorded as \u20180.5L PET Bottle\u2019. While these are all referring to the same thing, it could be hard for a human to know that they are the same, and pretty much impossible for a computer. To help get around this, we use identifiers. These are codes that we use to unambiguously reference a particular thing in our database. We will provide documentation soon to explain how to create unique identifiers for everything being described in the Open3P standard.","title":"Identifiers"},{"location":"6_Controlled_Lists/6_1_Controlled_Lists_Component_Catalogue/","text":"Controlled Lists \u00b6 Controlled lists are possible options in certain fields of the dataset. These are items that are maintained by a custodian of the data. It is important that these controlled lists are adhered to. Software developers building applications or services around this standard will rely on these options. Some software developers at the publishing end may introduce validation of the data to ensure compliance with these controlled lists. Note: Please use the controlled list that is tied to each a specific dataset. For instance, there are recycling disruptor controlled lists for the Component Catalogue , Unique Component , and Complete Packaging that will have unique identifiers and items specific to the context. The controlled lists in use in the standard for component catalogue are: Shape Flexibility Component Catalogue Recycling Disruptors Recycled Content Evidence Type 1. Shape \u00b6 Shape Controlled List 2. Flexibility \u00b6 Flexibility Controlled List 3. Component Catalogue Recycling Disruptors \u00b6 Component Catalogue Recycling Disruptors Controlled List 4. Recycled Content Evidence Type \u00b6 Recycled Content Evidence Type","title":"Controlled Lists"},{"location":"6_Controlled_Lists/6_1_Controlled_Lists_Component_Catalogue/#controlled-lists","text":"Controlled lists are possible options in certain fields of the dataset. These are items that are maintained by a custodian of the data. It is important that these controlled lists are adhered to. Software developers building applications or services around this standard will rely on these options. Some software developers at the publishing end may introduce validation of the data to ensure compliance with these controlled lists. Note: Please use the controlled list that is tied to each a specific dataset. For instance, there are recycling disruptor controlled lists for the Component Catalogue , Unique Component , and Complete Packaging that will have unique identifiers and items specific to the context. The controlled lists in use in the standard for component catalogue are: Shape Flexibility Component Catalogue Recycling Disruptors Recycled Content Evidence Type","title":"Controlled Lists"},{"location":"6_Controlled_Lists/6_1_Controlled_Lists_Component_Catalogue/#1-shape","text":"Shape Controlled List","title":"1. Shape"},{"location":"6_Controlled_Lists/6_1_Controlled_Lists_Component_Catalogue/#2-flexibility","text":"Flexibility Controlled List","title":"2. Flexibility"},{"location":"6_Controlled_Lists/6_1_Controlled_Lists_Component_Catalogue/#3-component-catalogue-recycling-disruptors","text":"Component Catalogue Recycling Disruptors Controlled List","title":"3. Component Catalogue Recycling Disruptors"},{"location":"6_Controlled_Lists/6_1_Controlled_Lists_Component_Catalogue/#4-recycled-content-evidence-type","text":"Recycled Content Evidence Type","title":"4. Recycled Content Evidence Type"},{"location":"6_Controlled_Lists/6_2_Controlled_Lists_Component_Catalogue_Materials/","text":"Controlled Lists \u00b6 Controlled lists are possible options in certain fields of the dataset. These are items that are maintained by a custodian of the data. It is important that these controlled lists are adhered to. Software developers building applications or services around this standard will rely on these options. Some software developers at the publishing end may introduce validation of the data to ensure compliance with these controlled lists. Note: Please use the controlled list that is tied to each a specific dataset. For instance, there are recycling disruptor controlled lists for the Component Catalogue , Unique Component , and Complete Packaging that will have unique identifiers and items specific to the context. The controlled lists in use in the standard for component catalogue materials are: Material Type Material Function Material Category 1. Material Type \u00b6 Material Type Controlled List 2. Material Function \u00b6 Material Function Controlled List 3. Material Category \u00b6 Material Category Controlled List","title":"Controlled Lists"},{"location":"6_Controlled_Lists/6_2_Controlled_Lists_Component_Catalogue_Materials/#controlled-lists","text":"Controlled lists are possible options in certain fields of the dataset. These are items that are maintained by a custodian of the data. It is important that these controlled lists are adhered to. Software developers building applications or services around this standard will rely on these options. Some software developers at the publishing end may introduce validation of the data to ensure compliance with these controlled lists. Note: Please use the controlled list that is tied to each a specific dataset. For instance, there are recycling disruptor controlled lists for the Component Catalogue , Unique Component , and Complete Packaging that will have unique identifiers and items specific to the context. The controlled lists in use in the standard for component catalogue materials are: Material Type Material Function Material Category","title":"Controlled Lists"},{"location":"6_Controlled_Lists/6_2_Controlled_Lists_Component_Catalogue_Materials/#1-material-type","text":"Material Type Controlled List","title":"1. Material Type"},{"location":"6_Controlled_Lists/6_2_Controlled_Lists_Component_Catalogue_Materials/#2-material-function","text":"Material Function Controlled List","title":"2. Material Function"},{"location":"6_Controlled_Lists/6_2_Controlled_Lists_Component_Catalogue_Materials/#3-material-category","text":"Material Category Controlled List","title":"3. Material Category"},{"location":"6_Controlled_Lists/6_3_Controlled_Lists_Unique_Component/","text":"Controlled Lists \u00b6 Controlled lists are possible options in certain fields of the dataset. These are items that are maintained by a custodian of the data. It is important that these controlled lists are adhered to. Software developers building applications or services around this standard will rely on these options. Some software developers at the publishing end may introduce validation of the data to ensure compliance with these controlled lists. Note: Please use the controlled list that is tied to each a specific dataset. For instance, there are recycling disruptor controlled lists for the Component Catalogue , Unique Component , and Complete Packaging that will have unique identifiers and items specific to the context. The controlled lists in use in the standard for unique component are: Level Reuse System Unique Component Recycling Disruptors 1. Level \u00b6 Level Controlled List 2. Reuse System \u00b6 Reuse System Controlled List 3. Unique Component Recycling Disruptors \u00b6 Unique Component Recycling Disruptors Controlled List","title":"Controlled Lists"},{"location":"6_Controlled_Lists/6_3_Controlled_Lists_Unique_Component/#controlled-lists","text":"Controlled lists are possible options in certain fields of the dataset. These are items that are maintained by a custodian of the data. It is important that these controlled lists are adhered to. Software developers building applications or services around this standard will rely on these options. Some software developers at the publishing end may introduce validation of the data to ensure compliance with these controlled lists. Note: Please use the controlled list that is tied to each a specific dataset. For instance, there are recycling disruptor controlled lists for the Component Catalogue , Unique Component , and Complete Packaging that will have unique identifiers and items specific to the context. The controlled lists in use in the standard for unique component are: Level Reuse System Unique Component Recycling Disruptors","title":"Controlled Lists"},{"location":"6_Controlled_Lists/6_3_Controlled_Lists_Unique_Component/#1-level","text":"Level Controlled List","title":"1. Level"},{"location":"6_Controlled_Lists/6_3_Controlled_Lists_Unique_Component/#2-reuse-system","text":"Reuse System Controlled List","title":"2. Reuse System"},{"location":"6_Controlled_Lists/6_3_Controlled_Lists_Unique_Component/#3-unique-component-recycling-disruptors","text":"Unique Component Recycling Disruptors Controlled List","title":"3. Unique Component Recycling Disruptors"},{"location":"6_Controlled_Lists/6_4_Controlled_Lists_Complete_Packaging/","text":"Controlled Lists \u00b6 Controlled lists are possible options in certain fields of the dataset. These are items that are maintained by a custodian of the data. It is important that these controlled lists are adhered to. Software developers building applications or services around this standard will rely on these options. Some software developers at the publishing end may introduce validation of the data to ensure compliance with these controlled lists. Note: Please use the controlled list that is tied to each a specific dataset. For instance, there are recycling disruptor controlled lists for the Component Catalogue , Unique Component , and Complete Packaging that will have unique identifiers and items specific to the context. The controlled lists in use in the standard for complete packaging are: Product Type Deposit Return Scheme Recyclability Source 1. Product Type \u00b6 Product Type Controlled List 2. Deposit Return Scheme \u00b6 Deposit Return Scheme Controlled List 3. Recyclability Source \u00b6 Recyclability Source Controlled List","title":"Controlled Lists"},{"location":"6_Controlled_Lists/6_4_Controlled_Lists_Complete_Packaging/#controlled-lists","text":"Controlled lists are possible options in certain fields of the dataset. These are items that are maintained by a custodian of the data. It is important that these controlled lists are adhered to. Software developers building applications or services around this standard will rely on these options. Some software developers at the publishing end may introduce validation of the data to ensure compliance with these controlled lists. Note: Please use the controlled list that is tied to each a specific dataset. For instance, there are recycling disruptor controlled lists for the Component Catalogue , Unique Component , and Complete Packaging that will have unique identifiers and items specific to the context. The controlled lists in use in the standard for complete packaging are: Product Type Deposit Return Scheme Recyclability Source","title":"Controlled Lists"},{"location":"6_Controlled_Lists/6_4_Controlled_Lists_Complete_Packaging/#1-product-type","text":"Product Type Controlled List","title":"1. Product Type"},{"location":"6_Controlled_Lists/6_4_Controlled_Lists_Complete_Packaging/#2-deposit-return-scheme","text":"Deposit Return Scheme Controlled List","title":"2. Deposit Return Scheme"},{"location":"6_Controlled_Lists/6_4_Controlled_Lists_Complete_Packaging/#3-recyclability-source","text":"Recyclability Source Controlled List","title":"3. Recyclability Source"},{"location":"7_Governance/7_1_Governance/","text":"Governance \u00b6 Description of the governance arrangements for the standard, To be agreed.","title":"Governance"},{"location":"7_Governance/7_1_Governance/#governance","text":"Description of the governance arrangements for the standard, To be agreed.","title":"Governance"},{"location":"8_Supporting_Files/8_2_Example_Files/","text":"Examples \u00b6 This section of the guidance provides examples of different scenarios for providing information about plastic packaging ## coming soon","title":"Examples"},{"location":"8_Supporting_Files/8_2_Example_Files/#examples","text":"This section of the guidance provides examples of different scenarios for providing information about plastic packaging ## coming soon","title":"Examples"}]}